#!/bin/bash

function errcho () {
    (echo "${@}" >&2)

}


function has_more_than_max() {
    img_url_n="$(grep -m "${max_images}" "<img" "${1}" | tail -n 1 | cut -d\' -f2)"
    img_url_m="$(grep -m "$((${max_images} + 1))" "<img" "${1}" | tail -n 1 | cut -d\' -f2)"
    if [ "${img_url_m}" != "${img_url_n}" ]; then
        return 0
    fi

    return 1

}


function dateify() {
    line="${1}"

    line="${line/XII/12}"
    line="${line/XI/11}"
    line="${line/X/10}"
    line="${line/IX/9}"
    line="${line/VIII/8}"
    line="${line/VII/7}"
    line="${line/VI/6}"
    line="${line/V/5}"
    line="${line/IV/4}"
    line="${line/III/3}"
    line="${line/II/2}"
    line="${line/I/1.}"

    line="${line,,}" # to lowercase

    line="${line/ january /.1.}"
    line="${line/ february /.2.}"
    line="${line/ march /.3.}"
    line="${line/ april /.4.}"
    line="${line/ may /.5.}"
    line="${line/ june /.6.}"
    line="${line/ july /.7.}"
    line="${line/ august /.8.}"
    line="${line/ september /.9.}"
    line="${line/ october /.10.}"
    line="${line/ november /.11.}"
    line="${line/ december /.12.}"

    line="${line/ jan. /.1.}"
    line="${line/ feb. /.2.}"
    line="${line/ mar. /.3.}"
    line="${line/ apr. /.4.}"
    line="${line/ may /.5.}"
    line="${line/ june /.6.}"
    line="${line/ july /.7.}"
    line="${line/ aug. /.8.}"
    line="${line/ sept. /.9.}"
    line="${line/ oct. /.10.}"
    line="${line/ nov. /.11.}"
    line="${line/ dec. /.12.}"

    line="${line/ januari /.1.}"
    line="${line/ februari /.2.}"
    line="${line/ mars /.3.}"
    line="${line/ april /.4.}"
    line="${line/ maj /.5.}"
    line="${line/ juni /.6.}"
    line="${line/ juli /.7.}"
    line="${line/ augusti /.8.}"
    line="${line/ september /.9.}"
    line="${line/ oktober /.10.}"
    line="${line/ november /.11.}"
    line="${line/ december /.12.}"

    line="${line/ jan. /.1.}"
    line="${line/ febr. /.2.}"
    line="${line/ mars /.3.}"
    line="${line/ april /.4.}"
    line="${line/ maj /.5.}"
    line="${line/ juni /.6.}"
    line="${line/ juli /.7.}"
    line="${line/ aug. /.8.}"
    line="${line/ sep. /.9.}"
    line="${line/ okt. /.10.}"
    line="${line/ nov. /.11.}"
    line="${line/ dec. /.12.}"

    line="${line/../.}"

    echo "${line}"

}


function set_birth() {
    line="${1}"
    birth="$(echo "${line}" | cut -d\> -f2-)"
    birthdate="${birth#\*}"
    birthdate="${birthdate# }"
    birthdate="$(dateify "${birthdate}")"
    birthplace="$(echo "${birthdate}" | cut -d\  -f2-)"
    birthdate="$(echo "${birthdate}" | cut -d\  -f1)"
    if [ "${birthplace}" == "${birthdate}" ]; then
        birthplace=""
    fi

}


function set_death() {
    line="${1}"
    death="$(echo "${line}" | cut -d\> -f2-)"
    deathdate="${death#&#134;}"
    deathdate="${deathdate# }"
    deathdate="$(dateify "${deathdate}")"
    deathplace="$(echo "${deathdate}" | cut -d\  -f2-)"
    deathdate="$(echo "${deathdate}" | cut -d\  -f 1)"
    if [ "${deathplace}" == "${deathdate}" ]; then
        deathplace=""
    fi

}


errcho -n "${1}: "
if [ -t 1 ]; then
    errcho ""
fi

tmp="$(mktemp)"
sed 's/</\n</g' "${1}" > "${tmp}"

imgs=()
max_images=0
while has_more_than_max "${tmp}"; do
    max_images=$((${max_images} + 1))
    imgs+=($(grep -m "${max_images}" "<img" "${tmp}" | tail -n 1 | cut -d\' -f2))
done

cemetery="$(grep "<h1>" "${tmp}" | cut -d\> -f2)"
position="$(grep "Sijainti" "${tmp}" | cut -d\  -f2-)"

tmp_people="$(mktemp)"
awk "/<td align='center'>/ { show=1 } show; /<\/td>/ { show=0 }" "${tmp}" > "${tmp_people}"

people=()

name=""
birthdate=""
birthplace=""
deathdate=""
deathplace=""

while read -r line; do
    if [[ "${line}" == "<td"* ]]; then
        continue
    elif [[ "${line}" == "<br>Sijainti"* ]]; then
        continue
    elif [[ "${line}" == "</b>"* ]]; then
        break
    elif [[ "${line}" == "<br>*"* ]]; then
        set_birth "${line}"
    elif [[ "${line}" == "<br>&#134;"* ]]; then
        set_death "${line}"
    elif [[ "${line}" =~ ^\<br\>[\?0-9] ]]; then
        if [ -z "${birthdate}" ]; then
            set_birth "${line}"
        elif [ -z "${deathdate}" ]; then
            set_death "${line}"
        else
            errcho "WARNING: line starting with [?0-9] when dates already set for ${1}"
        fi
    else
        if [ ! -z "${name}" ]; then
            birth="${birthdate}\",\"${birthplace}"
            death="${deathdate}\",\"${deathplace}"
            people+=("${name}\",\"${birth}\",\"${death}")
            birthdate=""
            birthplace=""
            deathdate=""
            deathplace=""
        fi
        name="$(echo "${line}" | cut -d\> -f2)"
    fi
done < "${tmp_people}"

if [ -z "${name}" ]; then
    errcho "WARNING: failed to read name from ${1}"
fi

birth="${birthdate}\",\"${birthplace}"
death="${deathdate}\",\"${deathplace}"
people+=("${name}\",\"${birth}\",\"${death}")

for person in "${people[@]}"; do
    echo -n "\"${1}\",\"${person}\",\"${cemetery}\",\"${position}\",\"${img_url_1}\""
    for img in "${imgs[@]}"; do
        echo -n ",\"${img}\""
    done
    echo ""
done

rm "${tmp}" "${tmp_people}"

if [ -t 1 ]; then
    errcho -n "${1} "
fi

errcho "done."

